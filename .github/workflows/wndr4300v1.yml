#
# Copyright (c) 2020 Tommy Lau <http://tommy.net.cn/>
#
# https://github.com/TommyLau/actions-openwrt
# Description: Build OpenWrt image with GitHub Actions
#

name: Build WNDR4300v1 Image

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Access to SSH terminal'
        default: 'true'
  push:
    branches:
      - master
    paths:
      - wndr4300v1.config

env:
  DEVICE_NAME: WNDR4300v1
  CONFIG_FILE: wndr4300v1.config
  TIMEZONE: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y --no-install-recommends subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc zip upx
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TIMEZONE"

    - name: Setup OpenWrt SDK
      run: |
        mkdir sdk
        curl -SL "https://downloads.openwrt.org/releases/19.07.3/targets/ar71xx/nand/openwrt-sdk-19.07.3-ar71xx-nand_gcc-7.5.0_musl.Linux-x86_64.tar.xz" -o sdk.tar.xz
        tar Jxvf sdk.tar.xz -C sdk --strip-components=1
        mkdir -p sdk/staging_dir/host/bin
        ln -sf /usr/bin/upx sdk/staging_dir/host/bin/upx

    - name: Custom Configuration & Feeds
      run: |
        cd sdk
        sed -i '$a src-git tommy https://github.com/TommyLau/openwrt-packages' feeds.conf.default
        ./scripts/feeds update -a
        cd feeds/packages
        patch -p1 < $GITHUB_WORKSPACE/kcptun.patch
        cd ../..
        ./scripts/feeds install kcptun
        ./scripts/feeds install luci-app-ssr-plus
        ./scripts/feeds install luci-app-passwall
        cd ..
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE sdk/.config
        #sed -i 's/\(disabled=\)1/\10/' package/kernel/mac80211/files/lib/wifi/mac80211.sh

    - name: Setup Debug Session
      uses: csexton/debugger-action@master
      if: github.event.inputs.ssh == 'true'

    - name: Download Packages
      run: |
        cd sdk
        make defconfig
        make download -j8
        find dl -size -1024c -exec rm -fv {} \;

    - name: Build Custom Packages
      run: |
        cd sdk
        make -j$(nproc) || make -j1 V=s || make -j1 V=sc
        echo "::set-env name=BUILD_TIME::_$(date +"%Y%m%d%H%M")"

    - name: Setup OpenWrt Image Builder
      run: |
        curl -SLO "https://downloads.openwrt.org/releases/19.07.3/targets/ar71xx/nand/openwrt-imagebuilder-19.07.3-ar71xx-nand.Linux-x86_64.tar.xz"
        mkdir -p builder
        tar Jxvf openwrt-imagebuilder-19.07.3-ar71xx-nand.Linux-x86_64.tar.xz -C builder --strip=1

    - name: Build Image
      run: |
        mkdir -p packages
        cp sdk/bin/packages/mips_24kc/packages/kcptun*.ipk packages
        cp sdk/bin/packages/mips_24kc/tommy/*.ipk packages
        mkdir -p builder/packages
        cp -v packages/* builder/packages
        cd builder
        sed -i s/'23552k(ubi),25600k@0x6c0000(firmware)'/'120832k(ubi),122880k@0x6c0000(firmware)'/ target/linux/ar71xx/image/legacy.mk
        make image PROFILE=WNDR4300V1 PACKAGES="acme-dnsapi bash ca-certificates coreutils-nohup curl ddns-scripts_cloudflare.com-v4 dnsmasq-full ip-full ipset iptables iptables-mod-tproxy jsonfilter kmod-tun libuhttpd-openssl luci luci-app-acme luci-app-passwall luci-app-ssr-plus luci-app-unbound luci-compat luci-i18n-base-zh-cn luci-i18n-ddns-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-unbound-zh-cn luci-lib-ipkg -dnsmasq"
        cd bin/targets/*/*
        echo "::set-env name=FIRMWARE_PATH::$PWD"

    - name: Space Usage
      if: (!cancelled())
      run: df -hT

    - name: Upload Firmware
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_${{ env.DEVICE_NAME }}_${{ env.BUILD_TIME }}
        path: |
          ${{ env.FIRMWARE_PATH }}/*.img
          ${{ env.FIRMWARE_PATH }}/*.tar

    - name: Upload Packages
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_${{ env.DEVICE_NAME }}_Packages_${{ env.BUILD_TIME }}
        path: packages
