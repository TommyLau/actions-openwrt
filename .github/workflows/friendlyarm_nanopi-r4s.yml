#
# Copyright (c) 2022 Tommy Lau <http://tommy.net.cn/>
#
# https://github.com/TommyLau/actions-openwrt
# Description: Build OpenWrt image with GitHub Actions
#

name: Build FriendlyARM NanoPi R4S 4GB LPDDR4 Image

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Access to SSH terminal'
        default: 'true'
  push:
    branches:
      - master
    paths:
      - '.github/workflows/friendlyarm_nanopi-r4s.yml'
      - 'files/**'

env:
  DEVICE_NAME: R4S
  PROFILE: friendlyarm_nanopi-r4s
  DEVICE_TARGET: rockchip
  DEVICE_SUB_TARGET: armv8
  CONFIG_FILE: r4s.config
  OPENWRT_VERSION: 22.03.1
  OPENWRT_URL: "https://downloads.openwrt.org/releases/${OPENWRT_VERSION}/targets/${DEVICE_TARGET}/${DEVICE_SUB_TARGET}"
  SDK_URL: "${OPENWRT_URL}/openwrt-sdk-${DEVICE_TARGET}-${DEVICE_SUB_TARGET}_gcc-11.2.0_musl.Linux-x86_64.tar.xz"
  BUILDER_URL: "${OPENWRT_URL}/openwrt-imagebuilder-${OPENWRT_VERSION}-${DEVICE_TARGET}-${DEVICE_SUB_TARGET}.Linux-x86_64.tar.xz"
  TIMEZONE: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y --no-install-recommends subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc zip upx gcc-multilib g++-multilib
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TIMEZONE"
        OPENWRT_URL=`eval echo "$OPENWRT_URL"`
        SDK_URL=`eval echo "$SDK_URL"`
        BUILDER_URL=`eval echo "$BUILDER_URL"`
        echo "OPENWRT_URL=$OPENWRT_URL" >> $GITHUB_ENV
        echo "SDK_URL=$SDK_URL" >> $GITHUB_ENV
        echo "BUILDER_URL=$BUILDER_URL" >> $GITHUB_ENV

    - name: Setup Debug Session
      uses: csexton/debugger-action@master
      if: github.event.inputs.ssh == 'true'

    - name: Setup OpenWrt Image Builder
      run: |
        curl -SL "${{ env.BUILDER_URL }}" -o builder.tar.xz
        mkdir builder
        tar Jxvf builder.tar.xz -C builder --strip-components=1

    - name: Build Image
      run: |
        cd builder
        make image FILES="../files" PACKAGES=" \
        -dnsmasq \
        bash \
        ca-certificates \
        coreutils-base64 \
        coreutils-nohup \
        curl \
        ddns-scripts-cloudflare \
        dnsmasq-full \
        ip-full \
        iperf3 \
        jq \
        kmod-inet-diag \
        kmod-nft-tproxy \
        libcap \
        libcap-bin \
        luci \
        luci-app-acme \
        luci-app-ddns \
        luci-app-upnp \
        luci-base \
        luci-i18n-acme-zh-cn \
        luci-i18n-base-zh-cn \
        luci-i18n-ddns-zh-cn \
        luci-i18n-firewall-zh-cn \
        luci-i18n-opkg-zh-cn \
        luci-i18n-upnp-zh-cn \
        nebula \
        ruby \
        ruby-yaml \
        tmux \
        unzip \
        vim"
        cd bin/targets/*/*
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV
        echo "BUILD_TIME=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Space Usage
      if: (!cancelled())
      run: df -hT

    - name: Upload Firmware
      uses: actions/upload-artifact@v3
      with:
        name: ImmortalWrt_${{ env.DEVICE_NAME }}_${{ env.BUILD_TIME }}
        path: |
          ${{ env.FIRMWARE_PATH }}/*.gz
